var express = require('express');
const models = require('../models');
const moment = require('moment');
var router = express.Router();


// router.get('/board', (req, res) => {
// res.render('show');
// });

// 게시글 목록
router.get('/board', async function(req, res, next) {
  let result = await models.post.findAll({
      order : [["id" ,"DESC"]]
  });
  if (result){
    for(let post of result){
      let result2 = await models.post.findOne({
        include: {
          model: models.reply,
          where: {
            postId: post.id
          }
        }
      })
      if(result2){
        post.replies = result2.replies
      }
    } 
  }
  res.render("show", {
    posts : result
  });
});

//데이터 포스트로 보내기
router.post('/board', (req, res) => {
    let body = req.body;

    models.post.create({
        title: body.inputTitle,
        writer: body.inputWriter,
    })
        .then( result => {
            console.log("데이터 추가 완료");
            res.redirect("/board");
        })
        .catch( err => {
            console.log("데이터 추가 실패");
        })
});

//edit 불러오기 
router.get('/edit/:id', (req, res) =>{
    let postID = req.params.id;
    models.post.findOne({
      where: {id: postID}
    })
    .then( result => {
      res.render("edit", {
        post: result,
     
      });
    })
    .catch( err => {
      console.log("데이터 조회 실패");
    });
  });

//edit post 데이터 보내기 
router.put('/board/:id', function(req, res, next) {
    let postID = req.params.id;
    let body = req.body;

    models.post.update({
        title: body.editTitle,
        writer: body.editWriter
    },{
        where: {id: postID}
    })
        .then( result => {
            console.log("데이터 수정 완료");
            res.redirect("/board");
        })
        .catch( err => {
            console.log("데이터 수정 실패");
        });
});

//delete post 삭제하기 
router.delete('/board/:id', function(req, res, next) {
    let postID = req.params.id;
  
    models.post.destroy({
      where: {id: postID}
    })
    .then( result => {
      res.redirect("/board")
    })
    .catch( err => {
      console.log("데이터 삭제 실패");
    });
  });

// 댓글 등록
router.post("/reply/:postID", function(req, res, next){
    let postID = req.params.postID;
    let body = req.body;
  
    models.reply.create({
      postId: postID,
      writer: body.replyWriter,
      content: body.replyContent
    })
    .then( results => {
      res.redirect("/board");
    })
    .catch( err => {
      console.log(err);
    });
  });
module.exports = router;